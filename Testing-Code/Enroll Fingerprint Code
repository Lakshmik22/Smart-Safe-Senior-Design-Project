#include <Arduino.h>
#include <Keypad.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <EEPROM.h>
#include <Adafruit_Fingerprint.h>
#include <HardwareSerial.h>
#include <WiFi.h>
#include <WebServer.h>
#include <NetworkClient.h>
#include <ESP_Mail_Client.h>

// OLED Definitions
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

#define EEPROM_SIZE_PASS 10  // EEPROM size for storing passcode
#define PASSCODE_LENGTH 6

// Keypad Definitions
#define ROWS 4
#define COLS 4

// LED pins
#define PIN_RED 2
#define PIN_GREEN 4

//EEPROM Parameters
#define EMAIL_LENGTH_BYTE 0
#define EMAIL_START_BYTE 1

//Relay pin
#define RELAY_PIN 23

//Motion Sensor Code
const int trigPin = 5;
const int echoPin = 35;

bool shouldReportDistance = true;
long timeOfNextMotionTrigger = 0;
#define MOTION_REPORT_DELAY 1000 * 60 * 5

//define sound speed in cm/uS
#define SOUND_SPEED 0.034
#define CM_TO_INCH 0.393701

//door sensor
#define DOOR_SENSOR_PIN 12
long DOOR_OPEN_ALARM_TIMEOUT = 30000;
bool isDoorOpen = false;
long doorOpenTime = 0;
bool shouldSendEmail = true;
bool safeIsUnlocked = false;

long duration1;
float distanceCm1;
float distanceInch1;
 
const char* ssid = "everglades_Guest"; // Change as needed
const char* password = "Dell2074"; // Change as needed

#define SMTP_server "smtp.gmail.com"
#define SMTP_Port 465

#define sender_email "smartsafesd1@gmail.com"
#define sender_password "owtibadqkzdoakpo"

#define Recipient_email "sripriyapalli@gmail.com"
#define Recipient_name "Smart Safe User"

// Buzzer Pin
const int buzzerPin = 15;

bool enrollFinger = false;
bool resetPasscode = false;
bool mastercodeReset = false;
bool mastercodeEnroll = false;

int inputIndex = 0;

HardwareSerial mySerial(1);
Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);

int fingerID = 0; // Variable to store entered fingerprint ID

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

bool inLockdownMode = false;
unsigned long int disableUntil = 0;
const unsigned long disableDuration = 15000;

char keyMap[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

uint8_t rowPins[ROWS] = {33, 32, 18, 19}; // GPIO pins for keypad rows
uint8_t colPins[COLS] = {14, 27, 26, 25}; // GPIO pins for keypad columns

Keypad keypad = Keypad(makeKeymap(keyMap), rowPins, colPins, ROWS, COLS);

// Code Variables
char masterCode[6] = {'1', '0', '1', '0', '1', '0'};
char enteredCode[6] = {' ', ' ', ' ', ' ', ' ', ' '};
char correctCode[6] = {'1', '2', '3', '4', '5', '6'};
int attempts = 0;

/////////////////////////////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////////////////

void loop() {
  checkLockdownTimeout();
  server.handleClient();
  delay(2);

  //////////////////////////MOTION SENSOR///////////////////////////////////////
  // Sensor 1
digitalWrite(trigPin1, LOW);
delayMicroseconds(2);
digitalWrite(trigPin1, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin1, LOW);
duration = pulseIn(echoPin1, HIGH);

   // Calculate the distance
  distanceCm = duration * 0.034 / 2;
  
  // Convert to inches
  distanceInch = distanceCm * CM_TO_INCH;

  checkDoor(); //check door sensor

//Motion Sensor
  if(distanceInch < 2){
    if (millis() >= timeOfNextMotionTrigger) {

      analogWrite(PIN_BLUE, 250);
      analogWrite(buzzerPin, 100);
      delay(500);
      analogWrite(PIN_BLUE, 0);
      analogWrite(buzzerPin, 0);

       display.clearDisplay();
       display.setTextSize(1);
       display.setTextColor(WHITE);
       displayCenteredText("SmartSafe", 5);
       display.setTextSize(1);
       displayCenteredText("Motion Detected", 20);
       display.display();

      delay(2000);

      sendEmail(readEEPROM(), "Alert: Motion Detected Near Your Safe", "Hello Safe User, \n\nWe wanted to alert you that movement was detected near your safe. This may indicate an attempt to access or tamper with the safe. Please verify that this activity is authorized. If you suspect unauthorized access, consider checking the area and taking necessary precautions.  \n\nThank you, \nSmart Safe");
      Serial.println("Sending Motion Detected Email...");

      //Still in Lockdown Mode
    if(inLockdownMode == true){
        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(WHITE);
        displayCenteredText("SmartSafe", 5);
        display.setTextSize(1);
        displayCenteredText("LOCKDOWN", 20);
        displayCenteredText("ACTIVATED", 35);
        displayCenteredText("Use fingerprint", 50);
        display.display();
      
      Serial.println("Still in Lockdown Mode");
    } else {
      resetCode();
    }
      timeOfNextMotionTrigger = millis() + MOTION_REPORT_DELAY;
    }
  }

  if (inLockdownMode && millis() < disableUntil) {
      fingerprintEntry(); // Do nothing while keypad is disabled
    }
      if (millis() == disableUntil) {
        inLockdownMode = false;
        homeScreenDisplay();
      }

      if (inLockdownMode == false && keypad.getKeys()) {
        for (int i = 0; i < LIST_MAX; i++) {
          if (keypad.key[i].stateChanged) { // Only find keys that have changed state
            switch (keypad.key[i].kstate) { // Check active key state
              case PRESSED:
              analogWrite(buzzerPin, 100);
              delay(200);
              analogWrite(buzzerPin, 0);
                switch (keypad.key[i].kchar) {
                  case '*': // Reset
                    resetCode();
                    updateOLEDDisplay();
                    break;

                  case '#': // Check code
                    checkEnteredCode();
                    break;

                  case 'A': //Enroll fingerprint
                  mastercodeEnroll = true;
                  resetCode();
                  display.clearDisplay();
                  display.setTextSize(1);
                  display.setTextColor(WHITE);
                  displayCenteredText("SmartSafe Mastermode", 5);
                  displayCenteredText("Enter master code", 20);
                  displayCenteredText("to enroll finger", 35);
                  display.display();
                  while(mastercodeEnroll == true){
                    handleMasterPasscodeEnroll();
                  }
                    break;

                  case 'B': //Reset passcode
                  mastercodeReset = true;
                  resetCode();
                  display.clearDisplay();
                  display.setTextSize(1);
                  display.setTextColor(WHITE);
                  displayCenteredText("SmartSafe Mastermode", 5);
                  displayCenteredText("Enter master code", 20);
                  displayCenteredText("to reset passcode", 35);
                  display.display();
                    while(mastercodeReset == true){
                      handleMasterPasscodeReset();
                    }
                    break;

                  default: // Enter digits
                    if (inputIndex < PASSCODE_LENGTH) {
                      enteredCode[inputIndex] = keypad.key[i].kchar;
                      inputIndex++;
                      updateOLEDDisplay();
                    } else {
                      display.clearDisplay();
                      display.setTextSize(1);
                      display.setTextColor(WHITE);
                      displayCenteredText("SmartSafe", 5);
                      displayCenteredText("Too many digits", 20);
                      displayCenteredText("entered", 35);
                      display.display();
                      delay(1000);
                      resetCode();
                      homeScreenDisplay();
                    break;
                }
                break;
            }
          }
        }
      }
    }
    fingerprintEntry();
  }

/////////////////////////////////////////////////////////////////////////////////////////////////////


void handleMasterPasscodeEnroll() { 
    if (keypad.getKeys()) {
        for (int i = 0; i < LIST_MAX; i++) {
            if (keypad.key[i].stateChanged && keypad.key[i].kstate == PRESSED) {  
                char key = keypad.key[i].kchar;

                // Sound buzzer once per key press
                analogWrite(buzzerPin, 100);
                delay(200);
                analogWrite(buzzerPin, 0);

                // Reset Code
                if (key == '*') {
                    resetCode();
                    updateMasterDisplay();
                }

                else if (key == 'D') {
                      display.clearDisplay();
                      display.setTextSize(1);
                      display.setTextColor(WHITE);
                      displayCenteredText("Returning", 20);
                      displayCenteredText("to Home Screen...", 35);
                      display.display();
                      delay(1000);
                      homeScreenDisplay();
                      mastercodeEnroll = false;
                      return;
                    }

                // Check Master Code
                else if (key == '#') {
                    if (compareCodes(enteredCode, masterCode)) {
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Mastermode", 5);
                        displayCenteredText("Master Code", 20);
                        displayCenteredText("Approved", 35);
                        display.display();

                        analogWrite(PIN_GREEN, 250);
                        analogWrite(buzzerPin, 100);
                        delay(1000);
                        analogWrite(PIN_GREEN, 0);
                        analogWrite(buzzerPin, 0);

                        resetCode();
                        
                        enrollFinger = true;
                        while (enrollFinger == true){
                        getFingerID();
                        }
                    } else {
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Mastermode", 5);
                        displayCenteredText("Master Code", 20);
                        displayCenteredText("Denied", 35);
                        display.display();

                        analogWrite(PIN_RED, 250);
                        analogWrite(buzzerPin, 100);
                        delay(1000);
                        analogWrite(PIN_RED, 0);
                        analogWrite(buzzerPin, 0);

                        resetCode(); 
                        homeScreenDisplay();
                        mastercodeEnroll = false;
                    }
                } 
                // Enter Digits for Master Code
                else {
                    if (inputIndex < PASSCODE_LENGTH) {
                        enteredCode[inputIndex] = key;
                        inputIndex++;
                        updateMasterDisplay();
                    } else {
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Mastermode", 5);
                        displayCenteredText("Too many digits", 20);
                        displayCenteredText("entered", 35);
                        display.display();

                        resetCode();
                        delay(1000);

                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Mastermode", 5);
                        displayCenteredText("Enter master code", 20);
                        displayCenteredText("to enroll finger", 35);
                        display.display();
                    }
                }
            }
        }
    }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

int getFingerID() {
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    displayCenteredText("SmartSafe FingerID", 5);
    displayCenteredText("Enter finger ID", 20);
    displayCenteredText("(1 - 127)", 35);
    display.display();

    char idCode[4] = {0};  // Holds up to 3 digits + null terminator

    while (true) {  // Loop until valid input is received
        if (keypad.getKeys()) {
            for (int i = 0; i < LIST_MAX; i++) {
                if (keypad.key[i].stateChanged && keypad.key[i].kstate == PRESSED) {  
                    char key = keypad.key[i].kchar;

                    // Sound buzzer on key press
                    analogWrite(buzzerPin, 100);
                    delay(200);
                    analogWrite(buzzerPin, 0);

                    if (key == '*') {  // Reset input
                        memset(idCode, 0, sizeof(idCode));  // Clear the array
                        inputIndex = 0;
                        updateFingerIDDisplay();
                    }
                    else if (key == 'D') {
                      display.clearDisplay();
                      display.setTextSize(1);
                      display.setTextColor(WHITE);
                      displayCenteredText("Returning", 20);
                      displayCenteredText("to Home Screen...", 35);
                      display.display();
                      delay(1000);
                      enrollFinger = false;
                      mastercodeEnroll = false;
                      homeScreenDisplay();
                      return -1;
                    }
                    else if (key == '#') {  // Submit input
                        if (inputIndex == 0) continue;  // Ignore empty input
                        
                        idCode[inputIndex] = '\0';  // Null-terminate the string
                        int fingerID = atoi(idCode);  // Convert char array to integer

                        if (fingerID >= 1 && fingerID <= 127) {
                            display.clearDisplay();
                            display.setTextSize(1);
                            display.setTextColor(WHITE);
                            displayCenteredText("SmartSafe FingerID", 5);
                            displayCenteredText("Valid ID", 20);
                            displayCenteredText("entered", 35);
                            display.display();
                            delay(2000);
                            enrollFingerprint();
                            display.clearDisplay();
                            display.setTextSize(1);
                            display.setTextColor(WHITE);
                            displayCenteredText("SmartSafe Enroll Mode", 5);
                            displayCenteredText("Enrollment Done", 20);
                            display.display();
                            delay(1000);
                            display.clearDisplay();
                            display.setTextSize(1);
                            display.setTextColor(WHITE);
                            displayCenteredText("Returning", 20);
                            displayCenteredText("to Home Screen...", 35);
                            display.display();
                            delay(1000);
                            enrollFinger = false;
                            mastercodeEnroll = false;
                            homeScreenDisplay();
                            return -1;
                        } else {
                            display.clearDisplay();
                            display.setTextSize(1);
                            display.setTextColor(WHITE);
                            displayCenteredText("SmartSafe FingerID", 5);
                            displayCenteredText("Invalid ID", 20);
                            displayCenteredText("Try Again", 35);
                            display.display();
                            delay(2000);

                            memset(idCode, 0, sizeof(idCode));  // Clear invalid input
                            resetCode();
                            display.clearDisplay();
                            display.setTextSize(1);
                            display.setTextColor(WHITE);
                            displayCenteredText("SmartSafe FingerID", 5);
                            displayCenteredText("Enter finger ID", 20);
                            displayCenteredText("(1 - 127)", 35);
                            display.display();
                        }
                    }
                    else if (isdigit(key) && inputIndex < 3) {  // Allow up to 3-digit input
                        idCode[inputIndex] = key;
                        inputIndex++;
                        updateFingerIDDisplay();
                    } else {
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe FingerID", 5);
                        displayCenteredText("Too many digits", 20);
                        displayCenteredText("entered", 35);
                        display.display();

                        memset(idCode, 0, sizeof(idCode));  
                        inputIndex = 0;
                        delay(2000);

                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe FingerID", 5);
                        displayCenteredText("Enter finger ID", 20);
                        displayCenteredText("(1 - 127)", 35);
                        display.display();
                    }
                }
            }
        }
    }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

uint8_t enrollFingerprint() {
    int p = -1;
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    displayCenteredText("SmartSafe Enroll Mode", 5);
    displayCenteredText("Place finger on", 20);
    displayCenteredText("scanner", 35);
    display.display();
    delay(2000);
    
    while (p != FINGERPRINT_OK) {
        p = finger.getImage();
        switch (p) {
            case FINGERPRINT_OK:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Image Taken", 20);
                displayCenteredText("Scan 1/2 Completed", 35);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_NOFINGER:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Waiting for finger...", 20);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_PACKETRECIEVEERR:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Communication Error", 20);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_IMAGEFAIL:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Imaging Error", 20);
                display.display();
                delay(1000);
                break;
            default:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Unknown Error", 20);
                display.display();
                delay(1000);
                break;
        }
    }

    // OK success!
    p = finger.image2Tz(1);
    switch (p) {
        case FINGERPRINT_OK:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Image Converted", 20);
            display.display();
            delay(1000);
            break;
        case FINGERPRINT_IMAGEMESS:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Image Too Messy", 20);
            display.display();
            delay(1000);
            return p;
        case FINGERPRINT_PACKETRECIEVEERR:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Communication Error", 20);
            display.display();
            delay(1000);
            return p;
        case FINGERPRINT_FEATUREFAIL:
        case FINGERPRINT_INVALIDIMAGE:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Unidenfiable Scan", 20);
            display.display();
            delay(1000);
            return p;
        default:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Unknown Error", 20);
            display.display();
            delay(1000);
            return p;
    }

    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    displayCenteredText("SmartSafe Enroll Mode", 5);
    displayCenteredText("Remove Finger", 20);
    display.display();
    delay(2000);
    p = 0;
    while (p != FINGERPRINT_NOFINGER) {
        p = finger.getImage();
    }

    p = -1;
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    displayCenteredText("SmartSafe Enroll Mode", 5);
    displayCenteredText("Place same finger", 20);
    displayCenteredText("on scanner", 35);
    display.display();
    delay(2000);
    
    while (p != FINGERPRINT_OK) {
        p = finger.getImage();
        switch (p) {
            case FINGERPRINT_OK:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Image Taken", 20);
                displayCenteredText("Scan 2/2 Completed", 35);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_NOFINGER:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Waiting for finger...", 20);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_PACKETRECIEVEERR:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Communication Error", 20);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_IMAGEFAIL:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Imaging Error", 20);
                display.display();
                delay(1000);
                break;
            default:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Unknown Error", 20);
                display.display();
                delay(1000);
                break;
        }
    }

    // OK success!
    p = finger.image2Tz(2);
    switch (p) {
        case FINGERPRINT_OK:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Image Converted", 20);
            display.display();
            delay(1000);
            break;
        case FINGERPRINT_PACKETRECIEVEERR:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Communication Error", 20);
            display.display();
            delay(1000);
            return p;
        case FINGERPRINT_FEATUREFAIL:
        case FINGERPRINT_INVALIDIMAGE:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Unidenfiable Scan", 20);
            display.display();
            delay(1000);
            return p;
        default:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Unknown Error", 20);
            display.display();
            delay(1000);
            return p;
    }

    // OK converted!
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    displayCenteredText("SmartSafe Enroll Mode", 5);
    displayCenteredText("Fingerprint", 20);
    displayCenteredText("Converted", 35);
    display.display();
    delay(1000);
    
    p = finger.createModel();
    if (p == FINGERPRINT_OK) {
        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(WHITE);
        displayCenteredText("SmartSafe Enroll Mode", 5);
        displayCenteredText("Fingerprints", 20);
        displayCenteredText("Matched", 35);
        display.display();
        delay(1000);
    } else {
        switch (p) {
          case FINGERPRINT_PACKETRECIEVEERR:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Communication Error", 20);
            display.display();
            delay(1000);
            return p;
          case FINGERPRINT_ENROLLMISMATCH:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Fingerprints Not", 20);
            displayCenteredText("Matched", 35);
            display.display();
            delay(1000);
            return p;
          default:
            return p;
        }
      }

    p = finger.storeModel(fingerID);
    if (p == FINGERPRINT_OK) {
        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(WHITE);
        displayCenteredText("SmartSafe Enroll Mode", 5);
        displayCenteredText("Fingerprint", 20);
        displayCenteredText("Stored", 35);
        display.display();
        delay(1000);
    } else {
        switch (p) {
            case FINGERPRINT_PACKETRECIEVEERR:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Communication Error", 20);
                displayCenteredText("after being stored", 35);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_BADLOCATION:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Bad Location To", 20);
                displayCenteredText("Store", 35);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_FLASHERR:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Flash Error", 20);
                display.display();
                delay(1000);
                break;
            default:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Unknown Error", 20);
                display.display();
                delay(1000);
                break;
        }
      return p;
    }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
